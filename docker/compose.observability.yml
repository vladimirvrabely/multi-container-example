name: example-observability

networks:
  example-infra_default-network:
    external: true

services:
  # See https://grafana.com/docs/grafana/latest/setup-grafana/configure-docker/
  grafana:
    container_name: grafana
    image: grafana/grafana
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ${PWD}/volumes/grafana/grafana.ini:/etc/grafana/grafana.ini
      # See https://grafana.com/docs/grafana/latest/administration/provisioning
      - ${PWD}/volumes/grafana/provisioning:/etc/grafana/provisioning
      - ${PWD}/volumes/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - example-infra_default-network
    ports:
      - "3000:3000"

  loki:
    container_name: loki
    image: grafana/loki
    user: 0:0
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ${PWD}/volumes/loki:/loki
    networks:
      - example-infra_default-network
    ports:
      - "3100:3100"

  promtail:
    container_name: promtail
    image: grafana/promtail
    user: 0:0
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ${PWD}/volumes/promtail/config.yml:/etc/promtail/config.yml:ro
      # to read container labels and logs
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
    networks:
      - example-infra_default-network

  prometheus:
    image: prom/prometheus:v3.2.1
    container_name: prometheus
    command:
      # See https://prometheus.io/docs/guides/opentelemetry/
      - "--web.enable-otlp-receiver"
    volumes:
      - ${PWD}/volumes/prometheus/prometheus.yml:/prometheus/prometheus.yml:ro
    networks:
      - example-infra_default-network
    ports:
      - "9091:9090"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      -  /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - example-infra_default-network
    ports:
      - "8080:8080"

  opentelemetry-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: opentelemetry-collector
    command:
      - "--config=/cfg/otel-collector-config.yaml"
    volumes:
      - ${PWD}/volumes/opentelemetry/otel-collector-config.yaml:/cfg/otel-collector-config.yaml
    networks:
      - example-infra_default-network
    ports:
      - "4317:4317"
      - "4318:4318"
      - "8889:8889"

  postgresql-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgresql-exporter
    environment:
        DATA_SOURCE_NAME: "${POSTGRES_URL}?sslmode=disable"
    restart: unless-stopped
    networks:
        - example-infra_default-network
    # ports:
    #   - "9187:9187"
